/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.cyriacus.english_dictionary;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;

/**
 *
 * @author ifeanyi
 */
public final class SearchView extends javax.swing.JFrame {

    private Connection conn;
    private String wrdSearch, word;

    int lastId, firstId;
    int dictionarySize;

    String[] tempHistory = new String[20];
    int headPosition, tapePosition;

    public SearchView() {
        this.tapePosition = 0;
        try {
//            connection environment variable
            Env environment = new Env();
            this.conn = environment.getConnection();
            dictionarySize = environment.getDictionarySize();
        } catch (SQLException ex) {
            Logger.getLogger(SearchView.class.getName()).log(Level.SEVERE, null, ex);
        }

        initComponents();
        btnRedo.setEnabled(false);
        btnUndo.setEnabled(false);
        LblError.setText("");
    }

    /**
     *
     * @param id: this is the id of a word
     * @param source: this indicate which button initiated this process
     */
    public SearchView(int id, String source) {
        this.tapePosition = 0;
        try {
//            connection environment variable
            Env environment = new Env();
            this.conn = environment.getConnection();
            dictionarySize = environment.getDictionarySize();
        } catch (SQLException ex) {
            Logger.getLogger(SearchView.class.getName()).log(Level.SEVERE, null, ex);
        }

        initComponents();
        btnRedo.setEnabled(false);
        btnUndo.setEnabled(false);
        id2word(id);//i placed it above history code so as to add value into history

    }

    /**
     * This method is called from within the constructor to initialise the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        searchPanel = new javax.swing.JPanel();
        btnSearch = new javax.swing.JButton();
        txtSearch = new javax.swing.JTextField();
        LblError = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtAreaSearch = new javax.swing.JTextArea();
        jSeparator2 = new javax.swing.JSeparator();
        lblHome = new javax.swing.JLabel();
        lblHistory = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        lblSettings = new javax.swing.JLabel();
        btnPrevious = new javax.swing.JButton();
        btnNext = new javax.swing.JButton();
        btnUndo = new javax.swing.JButton();
        btnRedo = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        btnSearch.setText("Search");
        btnSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearchActionPerformed(evt);
            }
        });

        txtSearch.setToolTipText("Enter your word search");
        txtSearch.setName(""); // NOI18N
        txtSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtSearchActionPerformed(evt);
            }
        });

        LblError.setFont(new java.awt.Font("Dialog", 2, 12)); // NOI18N
        LblError.setText("Notification bar");
        LblError.setToolTipText("");
        LblError.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        LblError.setEnabled(false);

        txtAreaSearch.setEditable(false);
        txtAreaSearch.setColumns(20);
        txtAreaSearch.setLineWrap(true);
        txtAreaSearch.setRows(5);
        txtAreaSearch.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jScrollPane1.setViewportView(txtAreaSearch);

        jSeparator2.setOrientation(javax.swing.SwingConstants.VERTICAL);

        lblHome.setText("Home");
        lblHome.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        lblHome.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblHomeMouseClicked(evt);
            }
        });

        lblHistory.setText("History");
        lblHistory.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        lblHistory.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblHistoryMouseClicked(evt);
            }
        });

        jSeparator1.setOrientation(javax.swing.SwingConstants.VERTICAL);

        lblSettings.setText("Settings");
        lblSettings.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        lblSettings.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblSettingsMouseClicked(evt);
            }
        });

        btnPrevious.setText("<<<");
        btnPrevious.setToolTipText("Previous");
        btnPrevious.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPreviousActionPerformed(evt);
            }
        });

        btnNext.setText(">>>");
        btnNext.setToolTipText("Next");
        btnNext.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNextActionPerformed(evt);
            }
        });

        btnUndo.setText("Undo");
        btnUndo.setToolTipText("Undo (Ctrl+Z)");
        btnUndo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUndoActionPerformed(evt);
            }
        });

        btnRedo.setText("Redo");
        btnRedo.setToolTipText("Redo (Ctrl+Y)");
        btnRedo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRedoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout searchPanelLayout = new javax.swing.GroupLayout(searchPanel);
        searchPanel.setLayout(searchPanelLayout);
        searchPanelLayout.setHorizontalGroup(
            searchPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(searchPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(searchPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, searchPanelLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(lblHome)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 2, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lblHistory)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 2, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lblSettings))
                    .addGroup(searchPanelLayout.createSequentialGroup()
                        .addGroup(searchPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, searchPanelLayout.createSequentialGroup()
                                .addComponent(btnUndo)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnRedo)
                                .addGap(18, 18, 18)
                                .addComponent(LblError, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addComponent(txtSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 432, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(searchPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(searchPanelLayout.createSequentialGroup()
                                .addComponent(btnPrevious)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnNext))
                            .addComponent(btnSearch, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap())
        );
        searchPanelLayout.setVerticalGroup(
            searchPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(searchPanelLayout.createSequentialGroup()
                .addGap(2, 2, 2)
                .addGroup(searchPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(btnSearch, javax.swing.GroupLayout.DEFAULT_SIZE, 29, Short.MAX_VALUE)
                    .addComponent(txtSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addGap(0, 0, 0)
                .addGroup(searchPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(LblError, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnPrevious, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnNext, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnRedo, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnUndo, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 0, 0)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 280, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(searchPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(searchPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(lblSettings)
                        .addComponent(lblHistory))
                    .addComponent(lblHome, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jSeparator2)
                    .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 0, 0))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(searchPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(searchPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnRedoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRedoActionPerformed
        // TODO add your handling code here:
        if (headPosition != 19 && tempHistory[headPosition+1] != null) {
            historyAndShow(tempHistory[++headPosition]);
            btnUndo.setEnabled(true);
        }
        if((headPosition) == 19 || tempHistory[headPosition+1] == null){
            btnRedo.setEnabled(false);
        }   
    }//GEN-LAST:event_btnRedoActionPerformed

    private void btnUndoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUndoActionPerformed
        // TODO add your handling code here:
        if (headPosition != 0 && tempHistory[headPosition-1] != null){
            historyAndShow(tempHistory[--headPosition]);
            btnRedo.setEnabled(true);
        }
        if((headPosition) == 0){
            btnUndo.setEnabled(false);
        }
    }//GEN-LAST:event_btnUndoActionPerformed

    private void btnNextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNextActionPerformed
        // TODO add your handling code here:
        ++lastId;
        if (lastId != dictionarySize) {
            id2word(lastId);
        } else {
            id2word(1);
        }
    }//GEN-LAST:event_btnNextActionPerformed

    private void btnPreviousActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPreviousActionPerformed
        // TODO add your handling code here:
        --firstId;
        if (firstId != 0) {
            id2word(firstId);
        } else {
            id2word(dictionarySize);
        }
    }//GEN-LAST:event_btnPreviousActionPerformed

    private void lblSettingsMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblSettingsMouseClicked
        // TODO add your handling code here:
        this.setVisible(false);
        new Settings().setVisible(true);
    }//GEN-LAST:event_lblSettingsMouseClicked

    private void lblHistoryMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblHistoryMouseClicked
        // TODO add your handling code here:
        this.setVisible(false);
        new History().setVisible(true);
    }//GEN-LAST:event_lblHistoryMouseClicked

    private void lblHomeMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblHomeMouseClicked
        // TODO add your handling code here:
        this.setVisible(false);
        new Index().setVisible(true);
    }//GEN-LAST:event_lblHomeMouseClicked

    private void txtSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtSearchActionPerformed
        // TODO add your handling code here:
        btnSearchActionPerformed(evt);
    }//GEN-LAST:event_txtSearchActionPerformed

    private void btnSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearchActionPerformed
        // TODO add your handling code here:
        wrdSearch = txtSearch.getText();
        searchAndShow(wrdSearch);
        // this will set the next button false
    }//GEN-LAST:event_btnSearchActionPerformed

    /**
     *
     * @param wrdSearch: this is the word entered into the search box.
     */
    public void searchAndShow(String wrdSearch) {
        PreparedStatement pt;
        ResultSet rs;
        try {
            String querySearch = "SELECT * FROM entries WHERE (word=?)";
            pt = conn.prepareStatement(querySearch);
            pt.setString(1, wrdSearch);
            rs = pt.executeQuery();

            if (rs.next()) {
                txtAreaSearch.setText("");
                LblError.setText("");

                firstId = rs.getInt("id");

                word = rs.getString("word");
                saveHistory(word);
                do {
                    lastId = rs.getInt("id");

                    String t = rs.getString("wordtype");
                    String h = rs.getString("definition");
                    txtAreaSearch.append(word + ": ");
                    txtAreaSearch.append(t + " \n" + h + "\n\n");
                } while (rs.next());

//                rename the search to resemble the correct spelling and capatilization
                txtSearch.setText(word);
                
//                this is to control the undo button to show when there are atleast two search completed
                if(tapePosition == 1){
                    btnUndo.setEnabled(true);
                }
                if (tempHistory[19] == null) {
                    tempHistory[tapePosition] = word;
                    headPosition = tapePosition;
                    tapePosition++;
                } else {
                    int i = 0;
                    for (; i < 19;) {
                        tempHistory[i] = tempHistory[++i];
                    }
                    tempHistory[i] = word;
                }
                

            } else {
                LblError.setText("oops :( word not found ");
                this.wrdSearch = null;
            }
        } catch (SQLException ex) {
//            Logger.getLogger(SearchView.class.getName()).log(Level.SEVERE, null, ex);
        }

        System.out.println(firstId + "--" + lastId);

    }
    
    public void historyAndShow(String wrdSearch) {
        PreparedStatement pt;
        ResultSet rs;
        try {
            String querySearch = "SELECT * FROM entries WHERE (word=?)";
            pt = conn.prepareStatement(querySearch);
            pt.setString(1, wrdSearch);
            rs = pt.executeQuery();

            if (rs.next()) {
                txtAreaSearch.setText("");
                LblError.setText("");

                firstId = rs.getInt("id");

                word = rs.getString("word");
//                saveHistory(word);
                do {
                    lastId = rs.getInt("id");

                    String t = rs.getString("wordtype");
                    String h = rs.getString("definition");
                    txtAreaSearch.append(word + ": ");
                    txtAreaSearch.append(t + " \n" + h + "\n\n");
                } while (rs.next());

//                rename the search to resemble the correct spelling and capatilization
                txtSearch.setText(word);
            }
        } catch (SQLException ex) {
//            Logger.getLogger(SearchView.class.getName()).log(Level.SEVERE, null, ex);
        }

        System.out.println(firstId + "--" + lastId);

    }

    /**
     *
     * @param id
     */
    public void id2word(int id) {
        PreparedStatement pt;
        ResultSet rs;
        String id2word = null;

        try {

            String querySearch = "SELECT (word) FROM entries WHERE (id=?)";
            pt = conn.prepareStatement(querySearch);
            pt.setInt(1, id);
            rs = pt.executeQuery();
            rs.next();
            id2word = rs.getString("word");

        } catch (SQLException ex) {
            Logger.getLogger(SearchView.class.getName()).log(Level.SEVERE, null, ex);
        }
        searchAndShow(id2word);
    }

    public void saveHistory(String wrdSearch) {
        // later if list exceed 50 delete  //later

        //to ensure integerity of history, word are only allowed to occur once
        try {
            String queryHistory;
            PreparedStatement his;

            queryHistory = "DELETE FROM `history` WHERE `history`.`word` = (?) ";
            his = conn.prepareStatement(queryHistory);
            his.setString(1, wrdSearch);
            his.execute();

            queryHistory = "INSERT INTO history (word) VALUES (?)";
            his = conn.prepareStatement(queryHistory);
            his.setString(1, wrdSearch);
            his.execute();

        } catch (SQLException ex) {
            Logger.getLogger(SearchView.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(SearchView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(SearchView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(SearchView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(SearchView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new SearchView().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel LblError;
    private javax.swing.JButton btnNext;
    private javax.swing.JButton btnPrevious;
    private javax.swing.JButton btnRedo;
    private javax.swing.JButton btnSearch;
    private javax.swing.JButton btnUndo;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JLabel lblHistory;
    private javax.swing.JLabel lblHome;
    private javax.swing.JLabel lblSettings;
    private javax.swing.JPanel searchPanel;
    private javax.swing.JTextArea txtAreaSearch;
    private javax.swing.JTextField txtSearch;
    // End of variables declaration//GEN-END:variables

    public String getWrdSearch() {
        return wrdSearch;
    }

    public void setWrdSearch(String wrdSearch) {
        this.wrdSearch = wrdSearch;
    }

    public String getWord() {
        return word;
    }

    public void setWord(String word) {
        this.word = word;
    }

}
